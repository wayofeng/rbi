[{"E:\\project\\rBi\\rbi\\src\\reportWebVitals.js":"1","E:\\project\\rBi\\rbi\\src\\App.js":"2","E:\\project\\rBi\\rbi\\src\\component\\Report.js":"3","E:\\project\\rBi\\rbi\\src\\component\\reportComponent\\ReportComponent.js":"4","E:\\project\\rBi\\rbi\\src\\component\\reportHeader\\ReportHeader.js":"5","E:\\project\\rBi\\rbi\\src\\index.js":"6","E:\\project\\rBi\\rbi\\src\\component\\reportSetting\\ReportSetting.js":"7","E:\\project\\rBi\\rbi\\src\\component\\reportContent\\ReportContent.js":"8","E:\\project\\rBi\\rbi\\src\\component\\reportContent\\ChartPanel.js":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":204,"mtime":1606294030392,"results":"12","hashOfConfig":"11"},{"size":1039,"mtime":1606463776708,"results":"13","hashOfConfig":"11"},{"size":1243,"mtime":1606721496586,"results":"14","hashOfConfig":"11"},{"size":589,"mtime":1606721545078,"results":"15","hashOfConfig":"11"},{"size":500,"mtime":1606467533634,"results":"16","hashOfConfig":"11"},{"size":434,"mtime":1606461555041,"results":"17","hashOfConfig":"11"},{"size":2088,"mtime":1606472081418,"results":"18","hashOfConfig":"11"},{"size":206,"mtime":1606468001606,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fv5tol",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\project\\rBi\\rbi\\src\\reportWebVitals.js",[],"E:\\project\\rBi\\rbi\\src\\App.js",[],"E:\\project\\rBi\\rbi\\src\\component\\Report.js",[],"E:\\project\\rBi\\rbi\\src\\component\\reportComponent\\ReportComponent.js",[],"E:\\project\\rBi\\rbi\\src\\component\\reportHeader\\ReportHeader.js",[],"E:\\project\\rBi\\rbi\\src\\index.js",[],"E:\\project\\rBi\\rbi\\src\\component\\reportSetting\\ReportSetting.js",[],"E:\\project\\rBi\\rbi\\src\\component\\reportContent\\ReportContent.js",["39"],"import React, { Component } from 'react'\r\nimport GridLayout, { Responsive, WidthProvider } from 'react-grid-layout'\r\nimport ChartPanel from './ChartPanel'\r\n\r\nimport './ReportContent.scss'\r\n\r\nimport panelListDefault from '../../mock/panelList.json'\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive)\r\n\r\nclass ReportContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      panelList: []\r\n    }\r\n    this.handleDrag = this.handleDrag.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const panelList = this.getPanelListFromStroage() || panelListDefault\r\n    this.setPanelList(panelList)\r\n    this.savePanelListToStroage()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.savePanelListToStroage()\r\n  }\r\n\r\n  setPanelList(panelList) {\r\n    this.setState((state) => {\r\n      return { ...state, panelList }\r\n    })\r\n  }\r\n\r\n  savePanelListToStroage() {\r\n    localStorage.setItem('panelList', JSON.stringify(this.state.panelList))\r\n  }\r\n\r\n  getPanelListFromStroage() {\r\n    const panelListStr = localStorage.getItem('panelList')\r\n    return !panelListStr ? '' : JSON.parse(panelListStr)\r\n  }\r\n\r\n  handleDrag(dataGrids) {\r\n    const { panelList } = this.state \r\n    const newPanelList = dataGrids.map(dataGrid => {\r\n      const oldPanel = panelList.find(val => val.id === dataGrid.i)\r\n      oldPanel.config.dataGrid = dataGrid\r\n      return oldPanel\r\n    })\r\n    this.setPanelList(newPanelList)\r\n  }\r\n\r\n  render() {\r\n    const breakpoints = { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }\r\n    const cols = { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }\r\n\r\n    const { panelList } = this.state\r\n\r\n    const panelItems = panelList.map(panel =>\r\n      <div key={panel.id} data-grid={panel.config.dataGrid}>\r\n        <ChartPanel></ChartPanel>\r\n      </div>\r\n    )\r\n    return (\r\n      <div className=\"report-content\">\r\n        <ResponsiveGridLayout onDragStop={this.handleDrag} className=\"layout\" rowHeight={30} breakpoints={breakpoints} cols={cols}>\r\n          {panelItems}\r\n        </ResponsiveGridLayout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReportContent","E:\\project\\rBi\\rbi\\src\\component\\reportContent\\ChartPanel.js",[],{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":18},"no-unused-vars","'GridLayout' is defined but never used.","Identifier","unusedVar"]